{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","errorImg","alt","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacterById","id","character","name","description","length","infoCheck","slice","strCheck","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","state","loading","error","marvelService","onCharacterLoaded","character2","setState","onCharacterLoading","onError","updateChar","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","itemRefs","setRef","ref","push","console","log","focusOnItem","forEach","item","classList","remove","add","focus","arr","i","tabIndex","props","onCharacterSelected","onKeyPress","event","key","renderItems","disabled","Skeleton","CharInfo","updateCharacterInfo","characterId","prevProps","skeleton","defaultProps","ErrorBoundary","errorInfo","children","App","selectedCharacter","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62020b43.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n                <g transform=\"rotate(0)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n                    </circle>\n                </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n                </circle>\n            </g>\n        </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n                </circle>\n            </g>\n        </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n                </circle>\n            </g>\n        </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n                </circle>\n            </g>\n        </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n                </circle>\n            </g>\n        </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n                </circle>\n            </g>\n        </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n                    <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n                    <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n                </circle>\n            </g>\n        </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import errorImg from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{\n            display: 'block',\n            width: '250px',\n            height: '250px',\n            objectFit: 'contain',\n            margin: '0 auto',\n        }}\n            src={errorImg}\n             alt={'Error'}\n        />\n    )\n}\n\nexport default ErrorMessage;","class MarvelService {\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    _apiKey = 'apikey=7b729205e470cb19de6c35b2f87e1be5';\n    _baseOffset = 200;\n\n    getResource = async (url) =>{\n        let res = await fetch(url);\n\n        if(!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n        }\n\n        return await res.json();\n    }\n\n    getAllCharacters = async(offset = this._baseOffset) => {\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\n        return res.data.results.map(this._transformCharacter);\n    }\n\n    getCharacterById = async (id) => {\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n        return this._transformCharacter(res.data.results[0]);\n    }\n\n    _transformCharacter = (character) => {\n        function infoCheck() {\n            if(character.description.length < 5 || character.description === 'undefined') {\n                return character.description = \"There is no description about this character\";\n            }\n        }\n        function strCheck() {\n            if (character.description.length >= 200) {\n                let slicedText =  character.description.slice(0, 200);\n                return slicedText + '...';\n            }\n        }\n        return {\n            id: character.id,\n            name: character.name,\n            description: infoCheck() || strCheck(),\n            thumbnail: character.thumbnail.path + '.' + character.thumbnail.extension,\n            homepage: character.urls[0].url,\n            wiki: character.urls[1].url,\n            comics: character.comics.items\n        }\n    }\n}\n\nexport default MarvelService;\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {Component} from \"react\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport MarvelService from \"../../services/MarvelService\";\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component{\n\n    state = {\n        character: {},\n        loading: true,\n        error: false,\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n        // this.timerId = setInterval(this.updateChar, 3000)\n    }\n\n    componentWillUnmount() {\n        // clearInterval(this.timerId);\n    }\n\n    onCharacterLoaded = (character2) => {\n        this.setState({\n            character: character2,\n            loading: false\n        })\n    }\n\n    onCharacterLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharacterLoading();\n        this.marvelService\n            // .getAllCharacters()\n            // .then(res => console.log(res))\n            .getCharacterById(id)\n            .then(this.onCharacterLoaded)\n            .catch(this.onError)\n    }\n\n\n\n    render(){\n\n\n        const {character, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View character={character}/> : null;\n\n        // if (loading) {\n        //     return <Spinner/>\n        // }\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({character}) => {\n    const {name, description, thumbnail, homepage, wiki} = character;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import {Component} from 'react';\nimport PropTypes from \"prop-types\";\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 200,\n        charEnded: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList < 9){\n            ended = true;\n        }\n\n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n        console.log(ref)\n    }\n\n    focusOnItem = (id) => {\n        // Я реализовал вариант чуть сложнее, и с классом и с фокусом\n        // Но в теории можно оставить только фокус, и его в стилях использовать вместо класса\n        // На самом деле, решение с css-классом можно сделать, вынеся персонажа\n        // в отдельный компонент. Но кода будет больше, появится новое состояние\n        // и не факт, что мы выиграем по оптимизации за счет большего кол-ва элементов\n\n        // По возможности, не злоупотребляйте рефами, только в крайних случаях\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n\n    // Этот метод создан для оптимизации,\n    // чтобы не помещать такую конструкцию в метод render\n    renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n\n            return (\n                <li className=\"char__item\"\n                    tabIndex={0}\n                    ref={this.setRef}\n                    key={item.id}\n                    onClick={() => {\n                        this.props.onCharacterSelected(item.id);\n                        this.focusOnItem(i);\n                    }}\n                    onKeyPress={(event) => {\n                        if (event.key === ' ' || event.key === 'Enter') {\n                            this.props.onCharacterSelected(item.id);\n                            this.focusOnItem(i);\n                        }\n                    }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n\n        const {charList, loading, error, newItemLoading, offset, charEnded} = this.state;\n\n        const items = this.renderItems(charList);\n        console.log(charList)\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button\n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharacterSelected: PropTypes.func.isRequired,\n}\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport Skeleton from \"../skeleton/Skeleton\";\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component{\n\n    state = {\n        character: null,\n        loading: false,\n        error: false,\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount(){\n        this.updateCharacterInfo();\n    }\n\n    componentDidUpdate(prevProps){\n       if (this.props.characterId !== prevProps.characterId){\n           this.updateCharacterInfo();\n       }\n    }\n    \n\n\n\n    updateCharacterInfo = () => {\n        const {characterId}  = this.props;\n        if (!characterId) {\n            return;\n        }\n        this.onCharacterLoading();\n\n        this.marvelService\n            .getCharacterById(characterId)\n            .then(this.onCharacterLoaded)\n            .catch(this.onError)\n\n    }\n\n    onCharacterLoaded = (character2) => {\n        this.setState({\n            character: character2,\n            loading: false\n        })\n    }\n\n    onCharacterLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n\n    render(){\n        const {character, loading, error} = this.state;\n\n        const skeleton = character || loading || error ? null : <Skeleton/>;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !character) ? <View character={character}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({character}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = character;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return(\n\n        <div>\n\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n\n                {\n                    comics.map((item, i) => {\n                            if (i < 10) return;\n                            return(\n                                <li key={i} className=\"char__comics-item\">\n                                    {item.name}\n                                </li>\n                            )\n\n                    })\n                }\n\n\n            </ul>\n\n        </div>\n    )\n}\nCharInfo.propTypes = {\n    characterId: PropTypes.number,\n}\nCharInfo.defaultProps = {\n    characterId: 1017105\n}\n\nexport default CharInfo;\n","import {Component} from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    // static getDerivedStateFromError(error) {\n    //     return {error: true};\n    // }\n\n    componentDidCatch(error, errorInfo){\n        console.log(error, errorInfo);\n        this.setState({\n            error: true\n        })\n    }\n\n    render(){\n        if (this.state.error){\n            return <ErrorMessage/>\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from 'react';\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component{\n    state = {\n        selectedCharacter: null\n    }\n\n    onCharacterSelected = (id) => {\n        this.setState({\n            selectedCharacter: id\n        })\n\n    }\n\n    render(){\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharacterSelected={this.onCharacterSelected}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo characterId={this.state.selectedCharacter}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}